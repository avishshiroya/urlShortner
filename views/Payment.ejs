<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Google Pay Integration</title>
    <script src="https://pay.google.com/gp/p/js/pay.js" async></script>
</head>

<body>
    <h1>Google Pay Integration Example</h1>
    <div id="google-pay-button"></div>

    <script>
        const paymentsClient = new google.payments.api.PaymentsClient({ environment: 'TEST' });

        const button = paymentsClient.createButton({
            onClick: onGooglePayButtonClick
        });

        document.getElementById('google-pay-button').appendChild(button);

        function onGooglePayButtonClick() {
            const paymentDataRequest = getGooglePaymentDataRequest();
            paymentsClient.loadPaymentData(paymentDataRequest)
                .then(function (paymentData) {
                    // Process payment after successful response from Google Pay
                    fetch('/process-payment', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ paymentData: paymentData })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                alert('Payment successful!');
                            } else {
                                alert('Payment failed!');
                            }
                        })
                        .catch(error => console.error('Error:', error));
                })
                .catch(function (err) {
                    console.error('Payment failed', err);
                });
        }

        function getGooglePaymentDataRequest() {
            return {
                apiVersion: 2,
                apiVersionMinor: 0,
                allowedPaymentMethods: [
                    {
                        type: 'CARD',
                        parameters: {
                            allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],
                            allowedCardNetworks: ['MASTERCARD', 'VISA']
                        },
                        tokenizationSpecification: {
                            type: 'PAYMENT_GATEWAY',
                            parameters: {
                                gateway: 'example',  // Replace 'example' with your actual payment gateway
                                gatewayMerchantId: 'BCR2DN4T26WKFPII'  // Your merchant ID
                            }
                        }
                    }
                ],
                merchantInfo: {
                    merchantId: 'BCR2DN4T26WKFPII',  // Your merchant ID
                    merchantName: 'Your Store Name'
                },
                transactionInfo: {
                    totalPriceStatus: 'FINAL',
                    totalPrice: calculateTotalPrice(),
                    currencyCode: 'USD',
                    countryCode: 'US',
                    displayItems: [
                        {
                            label: 'Product 1',
                            price: '15.00',
                            type: 'REGULAR'
                        },
                        {
                            label: 'Product 2',
                            price: '25.00',
                            type: 'REGULAR'
                        }
                    ]
                }
            };

        }

        function calculateTotalPrice() {
            const items = [
                { price: 15.00 },
                { price: 25.00 }
            ];
            let total = 0;
            items.forEach(item => {
                total += item.price;
            });
            return total.toFixed(2);  // Format to 2 decimal places
        }
    </script>
</body>

</html>